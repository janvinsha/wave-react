{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar resolutionError_1 = __importStar(require(\"../errors/resolutionError\"));\n/**\n * Checks domain name for special symbols and returns address in lowercase without spaces\n * @throws Will throw an error if domain address contains special symbols\n * @param domain - a domain address\n */\n\n\nvar reg = RegExp('^[.a-z0-9-]+$');\n\nfunction prepareAndValidateDomain(domain) {\n  var retVal = domain ? domain.trim().toLowerCase() : '';\n\n  if (!reg.test(retVal)) {\n    throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.InvalidDomainAddress, {\n      domain: domain\n    });\n  }\n\n  return retVal;\n}\n\nexports.prepareAndValidateDomain = prepareAndValidateDomain;","map":{"version":3,"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","resolutionError_1","require","reg","RegExp","prepareAndValidateDomain","domain","retVal","trim","toLowerCase","test","default","ResolutionErrorCode","InvalidDomainAddress"],"sources":["/Users/mac/Desktop/work/wave-frontend/node_modules/@unstoppabledomains/resolution/build/utils/prepareAndValidate.js"],"sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar resolutionError_1 = __importStar(require(\"../errors/resolutionError\"));\n/**\n * Checks domain name for special symbols and returns address in lowercase without spaces\n * @throws Will throw an error if domain address contains special symbols\n * @param domain - a domain address\n */\nvar reg = RegExp('^[.a-z0-9-]+$');\nfunction prepareAndValidateDomain(domain) {\n    var retVal = domain ? domain.trim().toLowerCase() : '';\n    if (!reg.test(retVal)) {\n        throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.InvalidDomainAddress, {\n            domain: domain,\n        });\n    }\n    return retVal;\n}\nexports.prepareAndValidateDomain = prepareAndValidateDomain;\n"],"mappings":"AAAA;;AACA,IAAIA,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;EAC3B,IAAIE,MAAM,GAAG,EAAb;EACA,IAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIG,CAAT,IAAcH,GAAd,EAAmB,IAAII,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2BN,GAA3B,EAAgCG,CAAhC,CAAJ,EAAwCD,MAAM,CAACC,CAAD,CAAN,GAAYH,GAAG,CAACG,CAAD,CAAf;EAC5ED,MAAM,CAAC,SAAD,CAAN,GAAoBF,GAApB;EACA,OAAOE,MAAP;AACH,CAND;;AAOAE,MAAM,CAACG,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,iBAAiB,GAAGX,YAAY,CAACY,OAAO,CAAC,2BAAD,CAAR,CAApC;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,GAAG,GAAGC,MAAM,CAAC,eAAD,CAAhB;;AACA,SAASC,wBAAT,CAAkCC,MAAlC,EAA0C;EACtC,IAAIC,MAAM,GAAGD,MAAM,GAAGA,MAAM,CAACE,IAAP,GAAcC,WAAd,EAAH,GAAiC,EAApD;;EACA,IAAI,CAACN,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAL,EAAuB;IACnB,MAAM,IAAIN,iBAAiB,CAACU,OAAtB,CAA8BV,iBAAiB,CAACW,mBAAlB,CAAsCC,oBAApE,EAA0F;MAC5FP,MAAM,EAAEA;IADoF,CAA1F,CAAN;EAGH;;EACD,OAAOC,MAAP;AACH;;AACDR,OAAO,CAACM,wBAAR,GAAmCA,wBAAnC"},"metadata":{},"sourceType":"script"}