{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar Zns_1 = __importDefault(require(\"./Zns\"));\n\nvar Uns_1 = __importDefault(require(\"./Uns\"));\n\nvar UdApi_1 = __importDefault(require(\"./UdApi\"));\n\nvar publicTypes_1 = require(\"./types/publicTypes\");\n\nvar resolutionError_1 = __importStar(require(\"./errors/resolutionError\"));\n\nvar DnsUtils_1 = __importDefault(require(\"./utils/DnsUtils\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar Eip1993Factories_1 = require(\"./utils/Eip1993Factories\");\n\nvar Networking_1 = __importDefault(require(\"./utils/Networking\"));\n\nvar prepareAndValidate_1 = require(\"./utils/prepareAndValidate\");\n\nvar namehash_1 = require(\"./utils/namehash\");\n/**\n * Blockchain domain Resolution library - Resolution.\n * @example\n * ```\n * import Resolution from '@unstoppabledomains/resolution';\n *\n * let resolution = new Resolution({ blockchain: {\n *        uns: {\n *           url: \"https://mainnet.infura.io/v3/12351245223\",\n *           network: \"mainnet\"\n *        }\n *      }\n *   });\n *\n * let domain = \"brad.zil\";\n * resolution.addr(domain, \"eth\").then(addr => console.log(addr));;\n * ```\n */\n\n\nvar Resolution =\n/** @class */\nfunction () {\n  function Resolution(_a) {\n    var _b;\n\n    var _c = (_a === void 0 ? {} : _a).sourceConfig,\n        sourceConfig = _c === void 0 ? undefined : _c;\n    var uns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns) ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns) : new Uns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns);\n    var zns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns) ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns) : new Zns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns);\n    this.serviceMap = (_b = {}, _b[publicTypes_1.NamingServiceName.UNS] = uns, _b[publicTypes_1.NamingServiceName.ZNS] = zns, _b);\n  }\n  /**\n   * AutoConfigure the blockchain network for UNS\n   * We make a \"net_version\" JSON RPC call to the blockchain either via url or with the help of given provider.\n   * @param sourceConfig - configuration object for uns\n   * @returns configured Resolution object\n   */\n\n\n  Resolution.autoNetwork = function (sourceConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolution, _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            resolution = new this();\n            if (!sourceConfig.uns) return [3\n            /*break*/\n            , 2];\n            _a = resolution.serviceMap;\n            _b = publicTypes_1.NamingServiceName.UNS;\n            return [4\n            /*yield*/\n            , Uns_1.default.autoNetwork(sourceConfig.uns)];\n\n          case 1:\n            _a[_b] = _c.sent();\n            _c.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , resolution];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a resolution with configured infura id for uns\n   * @param infura - infura project id\n   * @param networks - an optional object that describes what network to use when connecting UNS default is mainnet\n   */\n\n\n  Resolution.infura = function (infura, networks) {\n    var _a, _b, _c, _d;\n\n    return new this({\n      sourceConfig: {\n        uns: {\n          locations: {\n            Layer1: {\n              url: utils_1.signedInfuraLink(infura, (_a = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _a === void 0 ? void 0 : _a.locations.Layer1.network),\n              network: ((_b = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _b === void 0 ? void 0 : _b.locations.Layer1.network) || 'mainnet'\n            },\n            Layer2: {\n              url: utils_1.signedInfuraLink(infura, (_c = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _c === void 0 ? void 0 : _c.locations.Layer2.network),\n              network: ((_d = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _d === void 0 ? void 0 : _d.locations.Layer2.network) || 'polygon-mainnet'\n            }\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Creates a resolution instance with configured provider\n   * @param networks - an object that describes what network to use when connecting UNS or ZNS default is mainnet\n   * @see https://eips.ethereum.org/EIPS/eip-1193\n   */\n\n\n  Resolution.fromResolutionProvider = function (networks) {\n    if (networks.uns) {\n      return this.fromEthereumEip1193Provider({\n        uns: networks.uns\n      });\n    }\n\n    if (networks.zns) {\n      return this.fromZilliqaProvider(networks.zns.provider, networks);\n    }\n\n    throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.ServiceProviderError, {\n      providerMessage: 'Must specify network for uns or zns'\n    });\n  };\n  /**\n   * Creates a resolution instance with configured provider\n   * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n   * @see https://eips.ethereum.org/EIPS/eip-1193\n   */\n\n\n  Resolution.fromEthereumEip1193Provider = function (networks) {\n    var sourceConfig = {};\n\n    if (networks.uns) {\n      sourceConfig.uns = {\n        locations: {\n          Layer1: {\n            provider: networks.uns.locations.Layer1.provider,\n            network: networks.uns.locations.Layer1.network || 'mainnet'\n          },\n          Layer2: {\n            provider: networks.uns.locations.Layer2.provider,\n            network: networks.uns.locations.Layer2.network || 'polygon-mainnet'\n          }\n        }\n      };\n    }\n\n    return new this({\n      sourceConfig: sourceConfig\n    });\n  };\n  /**\n   * Creates a resolution instance with configured provider\n   * @param provider - any provider compatible with EIP-1193\n   * @param networks - an optional object that describes what network to use when connecting ZNS default is mainnet\n   * @see https://eips.ethereum.org/EIPS/eip-1193\n   */\n\n\n  Resolution.fromZilliqaProvider = function (provider, networks) {\n    var _a;\n\n    return new this({\n      sourceConfig: {\n        zns: {\n          provider: provider,\n          network: ((_a = networks === null || networks === void 0 ? void 0 : networks.zns) === null || _a === void 0 ? void 0 : _a.network) || 'mainnet'\n        }\n      }\n    });\n  };\n  /**\n   * Create a resolution instance from web3 0.x version provider\n   * @param networks - Ethereum network configuration with 0.x version provider from web3 ( must implement sendAsync(payload, callback) )\n   * @see https://github.com/ethereum/web3.js/blob/0.20.7/lib/web3/httpprovider.js#L116\n   */\n\n\n  Resolution.fromWeb3Version0Provider = function (networks) {\n    return this.fromEthereumEip1193Provider({\n      uns: networks.uns ? {\n        locations: {\n          Layer1: {\n            network: networks.uns.locations.Layer1.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer1.provider)\n          },\n          Layer2: {\n            network: networks.uns.locations.Layer2.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer2.provider)\n          }\n        }\n      } : undefined\n    });\n  };\n  /**\n   * Create a resolution instance from web3 1.x version provider\n   * @param networks - an optional object with 1.x version provider from web3 ( must implement send(payload, callback) ) that describes what network to use when connecting UNS default is mainnet\n   * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-core-helpers/types/index.d.ts#L165\n   * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-providers-http/src/index.js#L95\n   */\n\n\n  Resolution.fromWeb3Version1Provider = function (networks) {\n    return this.fromEthereumEip1193Provider({\n      uns: networks.uns ? {\n        locations: {\n          Layer1: {\n            network: networks.uns.locations.Layer1.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer1.provider)\n          },\n          Layer2: {\n            network: networks.uns.locations.Layer2.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer2.provider)\n          }\n        }\n      } : undefined\n    });\n  };\n  /**\n   * Creates instance of resolution from provider that implements Ethers Provider#call interface.\n   * This wrapper support only `eth_call` method for now, which is enough for all the current Resolution functionality\n   * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n   * @see https://github.com/ethers-io/ethers.js/blob/v4-legacy/providers/abstract-provider.d.ts#L91\n   * @see https://github.com/ethers-io/ethers.js/blob/v5.0.4/packages/abstract-provider/src.ts/index.ts#L224\n   * @see https://docs.ethers.io/ethers.js/v5-beta/api-providers.html#jsonrpcprovider-inherits-from-provider\n   * @see https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/json-rpc-provider.ts\n   */\n\n\n  Resolution.fromEthersProvider = function (networks) {\n    return this.fromEthereumEip1193Provider({\n      uns: networks.uns ? {\n        locations: {\n          Layer1: {\n            network: networks.uns.locations.Layer1.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer1.provider)\n          },\n          Layer2: {\n            network: networks.uns.locations.Layer2.network,\n            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer2.provider)\n          }\n        }\n      } : undefined\n    });\n  };\n  /**\n   * Resolves given domain name to a specific currency address if exists\n   * @async\n   * @param domain - domain name to be resolved\n   * @param ticker - currency ticker like BTC, ETH, ZIL\n   * @throws [[ResolutionError]] if address is not found\n   * @returns A promise that resolves in an address\n   */\n\n\n  Resolution.prototype.addr = function (domain, ticker) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.record(domain, \"crypto.\" + ticker.toUpperCase() + \".address\")];\n      });\n    });\n  };\n  /**\n   * Read multi-chain currency address if exists\n   * @async\n   * @param domain - domain name to be resolved\n   * @param ticker - currency ticker (USDT, FTM, etc.)\n   * @param chain - chain version, usually means blockchain ( ERC20, BEP2, OMNI, etc. )\n   * @throws [[ResolutionError]] if address is not found\n   * @returns A promise that resolves in an adress\n   */\n\n\n  Resolution.prototype.multiChainAddr = function (domain, ticker, chain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method, recordKey;\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        method = this.getNamingMethodOrThrow(domain);\n        recordKey = \"crypto.\" + ticker.toUpperCase() + \".version.\" + chain.toUpperCase() + \".address\";\n        return [2\n        /*return*/\n        , method.record(domain, recordKey)];\n      });\n    });\n  };\n  /**\n   * Resolves given domain name to a verified twitter handle\n   * @async\n   * @param domain - domain name to be resolved\n   * @throws [[ResolutionError]] if twitter is not found\n   * @returns A promise that resolves in a verified twitter handle\n   */\n\n\n  Resolution.prototype.twitter = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        method = this.getNamingMethodOrThrow(domain);\n        return [2\n        /*return*/\n        , method.twitter(domain)];\n      });\n    });\n  };\n  /**\n   * Resolve a chat id from the domain record\n   * @param domain - domain name to be resolved\n   * @throws [[ResolutionError]]\n   * @returns A promise that resolves in chatId\n   */\n\n\n  Resolution.prototype.chatId = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.record(domain, 'gundb.username.value')];\n      });\n    });\n  };\n  /**\n   * Resolve a gundb public key from the domain record\n   * @param domain - domain name to be resolved\n   * @throws [[ResolutionError]]\n   * @returns a promise that resolves in gundb public key\n   */\n\n\n  Resolution.prototype.chatPk = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.record(domain, 'gundb.public_key.value')];\n      });\n    });\n  };\n  /**\n   * Resolves the IPFS hash configured for domain records on ZNS\n   * @param domain - domain name\n   * @throws [[ResolutionError]]\n   */\n\n\n  Resolution.prototype.ipfsHash = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        return [2\n        /*return*/\n        , this.getPreferableNewRecord(domain, 'dweb.ipfs.hash', 'ipfs.html.value')];\n      });\n    });\n  };\n  /**\n   * Resolves the httpUrl attached to domain\n   * @param domain - domain name\n   */\n\n\n  Resolution.prototype.httpUrl = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        return [2\n        /*return*/\n        , this.getPreferableNewRecord(domain, 'browser.redirect_url', 'ipfs.redirect_domain.value')];\n      });\n    });\n  };\n  /**\n   * Resolves the ipfs email field from whois configurations\n   * @param domain - domain name\n   * @throws [[ResolutionError]]\n   * @returns A Promise that resolves in an email address configured for this domain whois\n   */\n\n\n  Resolution.prototype.email = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.record(domain, 'whois.email.value')];\n      });\n    });\n  };\n  /**\n   * @returns the resolver address for a specific domain\n   * @param domain - domain to look for\n   */\n\n\n  Resolution.prototype.resolver = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolver;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n            return [4\n            /*yield*/\n            , this.getNamingMethodOrThrow(domain).resolver(domain)];\n\n          case 1:\n            resolver = _a.sent();\n\n            if (!resolver) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnspecifiedResolver, {\n                domain: domain\n              });\n            }\n\n            return [2\n            /*return*/\n            , resolver];\n        }\n      });\n    });\n  };\n  /**\n   * @param domain - domain name\n   * @returns An owner address of the domain\n   */\n\n\n  Resolution.prototype.owner = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n            method = this.getNamingMethodOrThrow(domain);\n            return [4\n            /*yield*/\n            , method.owner(domain)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent() || null];\n        }\n      });\n    });\n  };\n  /**\n   * @param domain - domain name\n   * @param recordKey - a name of a record to be resolved\n   * @returns A record value promise for a given record name\n   */\n\n\n  Resolution.prototype.record = function (domain, recordKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        method = this.getNamingMethodOrThrow(domain);\n        return [2\n        /*return*/\n        , method.record(domain, recordKey)];\n      });\n    });\n  };\n  /**\n   * @param domain domain name\n   * @param keys Array of record keys to be resolved\n   * @returns A Promise with key-value mapping of domain records\n   */\n\n\n  Resolution.prototype.records = function (domain, keys) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        method = this.getNamingMethodOrThrow(domain);\n        return [2\n        /*return*/\n        , method.records(domain, keys)];\n      });\n    });\n  };\n  /**\n   * @param domain domain name\n   * @returns A Promise of whether or not the domain belongs to a wallet\n   */\n\n\n  Resolution.prototype.isRegistered = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        method = this.getNamingMethodOrThrow(domain);\n        return [2\n        /*return*/\n        , method.isRegistered(domain)];\n      });\n    });\n  };\n  /**\n   * @param domain domain name\n   * @returns A Promise of whether or not the domain is available\n   */\n\n\n  Resolution.prototype.isAvailable = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        method = this.getNamingMethodOrThrow(domain);\n        return [2\n        /*return*/\n        , method.isAvailable(domain)];\n      });\n    });\n  };\n  /**\n   * @returns Produces a namehash from supported naming service in hex format with 0x prefix.\n   * Corresponds to ERC721 token id in case of Ethereum based naming service like UNS.\n   * @param domain domain name to be converted\n   * @param options formatting options\n   * @throws [[ResolutionError]] with UnsupportedDomain error code if domain extension is unknown\n   */\n\n\n  Resolution.prototype.namehash = function (domain, options) {\n    if (options === void 0) {\n      options = publicTypes_1.NamehashOptionsDefault;\n    }\n\n    domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n    return this.formatNamehash(this.getNamingMethodOrThrow(domain).namehash(domain), options);\n  };\n  /**\n   * @returns a namehash of a subdomain with name label\n   * @param parent namehash of a parent domain\n   * @param label subdomain name\n   * @param namingService \"UNS\" or \"ZNS\"\n   * @param options formatting options\n   */\n\n\n  Resolution.prototype.childhash = function (parent, label, namingService, options) {\n    if (options === void 0) {\n      options = publicTypes_1.NamehashOptionsDefault;\n    }\n\n    var service = this.serviceMap[namingService];\n\n    if (!service) {\n      throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n        namingService: namingService\n      });\n    }\n\n    return this.formatNamehash(service.childhash(parent, label), options);\n  };\n\n  Resolution.prototype.formatNamehash = function (hash, options) {\n    hash = hash.replace('0x', '');\n\n    if (options.format === 'dec') {\n      return new bn_js_1.default(hash, 'hex').toString(10);\n    } else {\n      return options.prefix ? '0x' + hash : hash;\n    }\n  };\n  /**\n   * Checks weather the domain name matches the hash\n   * @param domain - domain name to check againt\n   * @param hash - hash obtained from the blockchain\n   */\n\n\n  Resolution.prototype.isValidHash = function (domain, hash) {\n    domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n    return this.namehash(domain) === hash;\n  };\n  /**\n   * Checks if the domain name is valid according to naming service rules\n   * for valid domain names.\n   * @param domain - domain name to be checked\n   */\n\n\n  Resolution.prototype.isSupportedDomain = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namingMethod, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n            namingMethod = this.getNamingMethod(domain);\n            if (!namingMethod) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , namingMethod.isSupportedDomain(domain)];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = false;\n            _b.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , _a];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the name of the service for a domain UNS | ZNS\n   * @param domain - domain name to look for\n   */\n\n\n  Resolution.prototype.serviceName = function (domain) {\n    domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n    return this.getNamingMethodOrThrow(domain).serviceName();\n  };\n  /**\n   * Returns all record keys of the domain.\n   * This method is strongly unrecommended for production use due to lack of support for many ethereum service providers and low performance\n   * @param domain - domain name\n   */\n\n\n  Resolution.prototype.allRecords = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        return [2\n        /*return*/\n        , this.getNamingMethodOrThrow(domain).allRecords(domain)];\n      });\n    });\n  };\n\n  Resolution.prototype.allNonEmptyRecords = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var records, nonEmptyRecords, _i, _a, _b, key, value;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.allRecords(domain)];\n\n          case 1:\n            records = _c.sent();\n            nonEmptyRecords = {};\n\n            for (_i = 0, _a = Object.entries(records); _i < _a.length; _i++) {\n              _b = _a[_i], key = _b[0], value = _b[1];\n\n              if (value) {\n                nonEmptyRecords[key] = value;\n              }\n            }\n\n            return [2\n            /*return*/\n            , nonEmptyRecords];\n        }\n      });\n    });\n  };\n\n  Resolution.prototype.dns = function (domain, types) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dnsUtils, method, dnsRecordKeys, blockchainData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            dnsUtils = new DnsUtils_1.default();\n            domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n            method = this.getNamingMethodOrThrow(domain);\n            dnsRecordKeys = this.getDnsRecordKeys(types);\n            return [4\n            /*yield*/\n            , method.records(domain, dnsRecordKeys)];\n\n          case 1:\n            blockchainData = _a.sent();\n            return [2\n            /*return*/\n            , dnsUtils.toList(blockchainData)];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves the tokenURI from the registry smart contract.\n   * @returns the ERC721Metadata#tokenURI contract method result\n   * @param domain - domain name\n   */\n\n\n  Resolution.prototype.tokenURI = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namehash;\n      return __generator(this, function (_a) {\n        namehash = this.namehash(domain);\n        return [2\n        /*return*/\n        , this.getNamingMethodOrThrow(domain).getTokenUri(namehash)];\n      });\n    });\n  };\n  /**\n   * Retrieves the data from the endpoint provided by tokenURI from the registry smart contract.\n   * @returns the JSON response of the token URI endpoint\n   * @param domain - domain name\n   */\n\n\n  Resolution.prototype.tokenURIMetadata = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenUri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.tokenURI(domain)];\n\n          case 1:\n            tokenUri = _a.sent();\n            return [2\n            /*return*/\n            , this.getMetadataFromTokenURI(tokenUri)];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves address of registry contract used for domain\n   * @param domain - domain name\n   * @returns Registry contract address\n   */\n\n\n  Resolution.prototype.registryAddress = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method;\n      return __generator(this, function (_a) {\n        method = this.getNamingMethodOrThrow(domain);\n        return [2\n        /*return*/\n        , method.registryAddress(domain)];\n      });\n    });\n  };\n  /**\n   * Retrieves the domain name from tokenId by parsing registry smart contract event logs.\n   * @throws {ResolutionError} if returned domain name doesn't match the original namhash.\n   * @returns the domain name retrieved from token metadata\n   * @param hash - domain hash\n   * @param service - nameservice which is used for lookup\n   */\n\n\n  Resolution.prototype.unhash = function (hash, service) {\n    return __awaiter(this, void 0, void 0, function () {\n      var name;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            hash = namehash_1.fromDecStringToHex(hash);\n            return [4\n            /*yield*/\n            , this.serviceMap[service].getDomainFromTokenId(hash)];\n\n          case 1:\n            name = _a.sent();\n\n            if (this.namehash(name) !== hash) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.ServiceProviderError, {\n                methodName: 'unhash',\n                domain: name,\n                providerMessage: 'Service provider returned an invalid domain name'\n              });\n            }\n\n            return [2\n            /*return*/\n            , name];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves address of registry contract used for domain\n   * @param domains - domain name\n   * @returns Promise<Locations> - A map of domain name and Location (a set of attributes like blockchain,\n   */\n\n\n  Resolution.prototype.locations = function (domains) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method, _i, domains_1, domain;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            method = this.getNamingMethodOrThrow(domains[0]);\n            _i = 0, domains_1 = domains;\n            _a.label = 1;\n\n          case 1:\n            if (!(_i < domains_1.length)) return [3\n            /*break*/\n            , 4];\n            domain = domains_1[_i];\n            return [4\n            /*yield*/\n            , method.isSupportedDomain(domain)];\n\n          case 2:\n            if (!_a.sent()) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.InconsistentDomainArray);\n            }\n\n            _a.label = 3;\n\n          case 3:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 4:\n            return [2\n            /*return*/\n            , method.locations(domains)];\n        }\n      });\n    });\n  };\n\n  Resolution.prototype.getMetadataFromTokenURI = function (tokenUri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resp, _a, _b, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Networking_1.default.fetch(tokenUri, {})];\n\n          case 1:\n            resp = _d.sent();\n\n            if (resp.ok) {\n              return [2\n              /*return*/\n              , resp.json()];\n            }\n\n            _a = resolutionError_1.default.bind;\n            _b = [void 0, resolutionError_1.ResolutionErrorCode.ServiceProviderError];\n            _c = {};\n            return [4\n            /*yield*/\n            , resp.text()];\n\n          case 2:\n            throw new (_a.apply(resolutionError_1.default, _b.concat([(_c.providerMessage = _d.sent(), _c.method = 'UDAPI', _c.methodName = 'tokenURIMetadata', _c)])))();\n        }\n      });\n    });\n  };\n\n  Resolution.prototype.getDnsRecordKeys = function (types) {\n    var records = ['dns.ttl'];\n    types.forEach(function (type) {\n      records.push(\"dns.\" + type);\n      records.push(\"dns.\" + type + \".ttl\");\n    });\n    return records;\n  };\n\n  Resolution.prototype.getPreferableNewRecord = function (domain, newRecord, oldRecord) {\n    return __awaiter(this, void 0, void 0, function () {\n      var records;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.records(domain, [newRecord, oldRecord])];\n\n          case 1:\n            records = _a.sent();\n\n            if (!records[newRecord] && !records[oldRecord]) {\n              throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.RecordNotFound, {\n                recordName: newRecord,\n                domain: domain\n              });\n            }\n\n            return [2\n            /*return*/\n            , records[newRecord] || records[oldRecord]];\n        }\n      });\n    });\n  };\n\n  Resolution.prototype.getNamingMethod = function (domain) {\n    return this.serviceMap[utils_1.findNamingServiceName(domain)];\n  };\n\n  Resolution.prototype.getNamingMethodOrThrow = function (domain) {\n    var method = this.getNamingMethod(domain);\n\n    if (!method) {\n      throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedDomain, {\n        domain: domain\n      });\n    }\n\n    return method;\n  };\n\n  return Resolution;\n}();\n\nexports.Resolution = Resolution;\nexports.default = Resolution;\n\nfunction isApi(obj) {\n  return obj && obj.api;\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","__importStar","k","Object","hasOwnProperty","defineProperty","exports","bn_js_1","require","Zns_1","Uns_1","UdApi_1","publicTypes_1","resolutionError_1","DnsUtils_1","utils_1","Eip1993Factories_1","Networking_1","prepareAndValidate_1","namehash_1","Resolution","_a","_b","_c","sourceConfig","undefined","uns","isApi","default","zns","serviceMap","NamingServiceName","UNS","ZNS","autoNetwork","resolution","infura","networks","_d","locations","Layer1","url","signedInfuraLink","network","Layer2","fromResolutionProvider","fromEthereumEip1193Provider","fromZilliqaProvider","provider","ResolutionErrorCode","ServiceProviderError","providerMessage","fromWeb3Version0Provider","Eip1993Factories","fromWeb3Version1Provider","fromEthersProvider","prototype","addr","domain","ticker","record","toUpperCase","multiChainAddr","chain","method","recordKey","prepareAndValidateDomain","getNamingMethodOrThrow","twitter","chatId","chatPk","ipfsHash","getPreferableNewRecord","httpUrl","email","resolver","UnspecifiedResolver","owner","records","keys","isRegistered","isAvailable","namehash","options","NamehashOptionsDefault","formatNamehash","childhash","parent","namingService","service","UnsupportedService","hash","replace","format","toString","prefix","isValidHash","isSupportedDomain","namingMethod","getNamingMethod","serviceName","allRecords","allNonEmptyRecords","nonEmptyRecords","_i","key","entries","dns","types","dnsUtils","dnsRecordKeys","blockchainData","getDnsRecordKeys","toList","tokenURI","getTokenUri","tokenURIMetadata","tokenUri","getMetadataFromTokenURI","registryAddress","unhash","name","fromDecStringToHex","getDomainFromTokenId","methodName","domains","domains_1","InconsistentDomainArray","resp","fetch","ok","json","bind","text","concat","forEach","type","newRecord","oldRecord","RecordNotFound","recordName","findNamingServiceName","UnsupportedDomain","obj","api"],"sources":["/Users/mac/Desktop/work/wave-frontend/node_modules/@unstoppabledomains/resolution/build/Resolution.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar Zns_1 = __importDefault(require(\"./Zns\"));\nvar Uns_1 = __importDefault(require(\"./Uns\"));\nvar UdApi_1 = __importDefault(require(\"./UdApi\"));\nvar publicTypes_1 = require(\"./types/publicTypes\");\nvar resolutionError_1 = __importStar(require(\"./errors/resolutionError\"));\nvar DnsUtils_1 = __importDefault(require(\"./utils/DnsUtils\"));\nvar utils_1 = require(\"./utils\");\nvar Eip1993Factories_1 = require(\"./utils/Eip1993Factories\");\nvar Networking_1 = __importDefault(require(\"./utils/Networking\"));\nvar prepareAndValidate_1 = require(\"./utils/prepareAndValidate\");\nvar namehash_1 = require(\"./utils/namehash\");\n/**\n * Blockchain domain Resolution library - Resolution.\n * @example\n * ```\n * import Resolution from '@unstoppabledomains/resolution';\n *\n * let resolution = new Resolution({ blockchain: {\n *        uns: {\n *           url: \"https://mainnet.infura.io/v3/12351245223\",\n *           network: \"mainnet\"\n *        }\n *      }\n *   });\n *\n * let domain = \"brad.zil\";\n * resolution.addr(domain, \"eth\").then(addr => console.log(addr));;\n * ```\n */\nvar Resolution = /** @class */ (function () {\n    function Resolution(_a) {\n        var _b;\n        var _c = (_a === void 0 ? {} : _a).sourceConfig, sourceConfig = _c === void 0 ? undefined : _c;\n        var uns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns)\n            ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns)\n            : new Uns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.uns);\n        var zns = isApi(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns)\n            ? new UdApi_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns)\n            : new Zns_1.default(sourceConfig === null || sourceConfig === void 0 ? void 0 : sourceConfig.zns);\n        this.serviceMap = (_b = {},\n            _b[publicTypes_1.NamingServiceName.UNS] = uns,\n            _b[publicTypes_1.NamingServiceName.ZNS] = zns,\n            _b);\n    }\n    /**\n     * AutoConfigure the blockchain network for UNS\n     * We make a \"net_version\" JSON RPC call to the blockchain either via url or with the help of given provider.\n     * @param sourceConfig - configuration object for uns\n     * @returns configured Resolution object\n     */\n    Resolution.autoNetwork = function (sourceConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolution, _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        resolution = new this();\n                        if (!sourceConfig.uns) return [3 /*break*/, 2];\n                        _a = resolution.serviceMap;\n                        _b = publicTypes_1.NamingServiceName.UNS;\n                        return [4 /*yield*/, Uns_1.default.autoNetwork(sourceConfig.uns)];\n                    case 1:\n                        _a[_b] = _c.sent();\n                        _c.label = 2;\n                    case 2: return [2 /*return*/, resolution];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a resolution with configured infura id for uns\n     * @param infura - infura project id\n     * @param networks - an optional object that describes what network to use when connecting UNS default is mainnet\n     */\n    Resolution.infura = function (infura, networks) {\n        var _a, _b, _c, _d;\n        return new this({\n            sourceConfig: {\n                uns: {\n                    locations: {\n                        Layer1: {\n                            url: utils_1.signedInfuraLink(infura, (_a = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _a === void 0 ? void 0 : _a.locations.Layer1.network),\n                            network: ((_b = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _b === void 0 ? void 0 : _b.locations.Layer1.network) || 'mainnet',\n                        },\n                        Layer2: {\n                            url: utils_1.signedInfuraLink(infura, (_c = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _c === void 0 ? void 0 : _c.locations.Layer2.network),\n                            network: ((_d = networks === null || networks === void 0 ? void 0 : networks.uns) === null || _d === void 0 ? void 0 : _d.locations.Layer2.network) || 'polygon-mainnet',\n                        },\n                    },\n                },\n            },\n        });\n    };\n    /**\n     * Creates a resolution instance with configured provider\n     * @param networks - an object that describes what network to use when connecting UNS or ZNS default is mainnet\n     * @see https://eips.ethereum.org/EIPS/eip-1193\n     */\n    Resolution.fromResolutionProvider = function (networks) {\n        if (networks.uns) {\n            return this.fromEthereumEip1193Provider({\n                uns: networks.uns,\n            });\n        }\n        if (networks.zns) {\n            return this.fromZilliqaProvider(networks.zns.provider, networks);\n        }\n        throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.ServiceProviderError, {\n            providerMessage: 'Must specify network for uns or zns',\n        });\n    };\n    /**\n     * Creates a resolution instance with configured provider\n     * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n     * @see https://eips.ethereum.org/EIPS/eip-1193\n     */\n    Resolution.fromEthereumEip1193Provider = function (networks) {\n        var sourceConfig = {};\n        if (networks.uns) {\n            sourceConfig.uns = {\n                locations: {\n                    Layer1: {\n                        provider: networks.uns.locations.Layer1.provider,\n                        network: networks.uns.locations.Layer1.network || 'mainnet',\n                    },\n                    Layer2: {\n                        provider: networks.uns.locations.Layer2.provider,\n                        network: networks.uns.locations.Layer2.network || 'polygon-mainnet',\n                    },\n                },\n            };\n        }\n        return new this({\n            sourceConfig: sourceConfig,\n        });\n    };\n    /**\n     * Creates a resolution instance with configured provider\n     * @param provider - any provider compatible with EIP-1193\n     * @param networks - an optional object that describes what network to use when connecting ZNS default is mainnet\n     * @see https://eips.ethereum.org/EIPS/eip-1193\n     */\n    Resolution.fromZilliqaProvider = function (provider, networks) {\n        var _a;\n        return new this({\n            sourceConfig: {\n                zns: { provider: provider, network: ((_a = networks === null || networks === void 0 ? void 0 : networks.zns) === null || _a === void 0 ? void 0 : _a.network) || 'mainnet' },\n            },\n        });\n    };\n    /**\n     * Create a resolution instance from web3 0.x version provider\n     * @param networks - Ethereum network configuration with 0.x version provider from web3 ( must implement sendAsync(payload, callback) )\n     * @see https://github.com/ethereum/web3.js/blob/0.20.7/lib/web3/httpprovider.js#L116\n     */\n    Resolution.fromWeb3Version0Provider = function (networks) {\n        return this.fromEthereumEip1193Provider({\n            uns: networks.uns\n                ? {\n                    locations: {\n                        Layer1: {\n                            network: networks.uns.locations.Layer1.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer1.provider),\n                        },\n                        Layer2: {\n                            network: networks.uns.locations.Layer2.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version0Provider(networks.uns.locations.Layer2.provider),\n                        },\n                    },\n                }\n                : undefined,\n        });\n    };\n    /**\n     * Create a resolution instance from web3 1.x version provider\n     * @param networks - an optional object with 1.x version provider from web3 ( must implement send(payload, callback) ) that describes what network to use when connecting UNS default is mainnet\n     * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-core-helpers/types/index.d.ts#L165\n     * @see https://github.com/ethereum/web3.js/blob/1.x/packages/web3-providers-http/src/index.js#L95\n     */\n    Resolution.fromWeb3Version1Provider = function (networks) {\n        return this.fromEthereumEip1193Provider({\n            uns: networks.uns\n                ? {\n                    locations: {\n                        Layer1: {\n                            network: networks.uns.locations.Layer1.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer1.provider),\n                        },\n                        Layer2: {\n                            network: networks.uns.locations.Layer2.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromWeb3Version1Provider(networks.uns.locations.Layer2.provider),\n                        },\n                    },\n                }\n                : undefined,\n        });\n    };\n    /**\n     * Creates instance of resolution from provider that implements Ethers Provider#call interface.\n     * This wrapper support only `eth_call` method for now, which is enough for all the current Resolution functionality\n     * @param networks - an object that describes what network to use when connecting UNS default is mainnet\n     * @see https://github.com/ethers-io/ethers.js/blob/v4-legacy/providers/abstract-provider.d.ts#L91\n     * @see https://github.com/ethers-io/ethers.js/blob/v5.0.4/packages/abstract-provider/src.ts/index.ts#L224\n     * @see https://docs.ethers.io/ethers.js/v5-beta/api-providers.html#jsonrpcprovider-inherits-from-provider\n     * @see https://github.com/ethers-io/ethers.js/blob/master/packages/providers/src.ts/json-rpc-provider.ts\n     */\n    Resolution.fromEthersProvider = function (networks) {\n        return this.fromEthereumEip1193Provider({\n            uns: networks.uns\n                ? {\n                    locations: {\n                        Layer1: {\n                            network: networks.uns.locations.Layer1.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer1.provider),\n                        },\n                        Layer2: {\n                            network: networks.uns.locations.Layer2.network,\n                            provider: Eip1993Factories_1.Eip1993Factories.fromEthersProvider(networks.uns.locations.Layer2.provider),\n                        },\n                    },\n                }\n                : undefined,\n        });\n    };\n    /**\n     * Resolves given domain name to a specific currency address if exists\n     * @async\n     * @param domain - domain name to be resolved\n     * @param ticker - currency ticker like BTC, ETH, ZIL\n     * @throws [[ResolutionError]] if address is not found\n     * @returns A promise that resolves in an address\n     */\n    Resolution.prototype.addr = function (domain, ticker) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, \"crypto.\" + ticker.toUpperCase() + \".address\")];\n            });\n        });\n    };\n    /**\n     * Read multi-chain currency address if exists\n     * @async\n     * @param domain - domain name to be resolved\n     * @param ticker - currency ticker (USDT, FTM, etc.)\n     * @param chain - chain version, usually means blockchain ( ERC20, BEP2, OMNI, etc. )\n     * @throws [[ResolutionError]] if address is not found\n     * @returns A promise that resolves in an adress\n     */\n    Resolution.prototype.multiChainAddr = function (domain, ticker, chain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method, recordKey;\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                method = this.getNamingMethodOrThrow(domain);\n                recordKey = \"crypto.\" + ticker.toUpperCase() + \".version.\" + chain.toUpperCase() + \".address\";\n                return [2 /*return*/, method.record(domain, recordKey)];\n            });\n        });\n    };\n    /**\n     * Resolves given domain name to a verified twitter handle\n     * @async\n     * @param domain - domain name to be resolved\n     * @throws [[ResolutionError]] if twitter is not found\n     * @returns A promise that resolves in a verified twitter handle\n     */\n    Resolution.prototype.twitter = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                method = this.getNamingMethodOrThrow(domain);\n                return [2 /*return*/, method.twitter(domain)];\n            });\n        });\n    };\n    /**\n     * Resolve a chat id from the domain record\n     * @param domain - domain name to be resolved\n     * @throws [[ResolutionError]]\n     * @returns A promise that resolves in chatId\n     */\n    Resolution.prototype.chatId = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, 'gundb.username.value')];\n            });\n        });\n    };\n    /**\n     * Resolve a gundb public key from the domain record\n     * @param domain - domain name to be resolved\n     * @throws [[ResolutionError]]\n     * @returns a promise that resolves in gundb public key\n     */\n    Resolution.prototype.chatPk = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, 'gundb.public_key.value')];\n            });\n        });\n    };\n    /**\n     * Resolves the IPFS hash configured for domain records on ZNS\n     * @param domain - domain name\n     * @throws [[ResolutionError]]\n     */\n    Resolution.prototype.ipfsHash = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                return [2 /*return*/, this.getPreferableNewRecord(domain, 'dweb.ipfs.hash', 'ipfs.html.value')];\n            });\n        });\n    };\n    /**\n     * Resolves the httpUrl attached to domain\n     * @param domain - domain name\n     */\n    Resolution.prototype.httpUrl = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                return [2 /*return*/, this.getPreferableNewRecord(domain, 'browser.redirect_url', 'ipfs.redirect_domain.value')];\n            });\n        });\n    };\n    /**\n     * Resolves the ipfs email field from whois configurations\n     * @param domain - domain name\n     * @throws [[ResolutionError]]\n     * @returns A Promise that resolves in an email address configured for this domain whois\n     */\n    Resolution.prototype.email = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.record(domain, 'whois.email.value')];\n            });\n        });\n    };\n    /**\n     * @returns the resolver address for a specific domain\n     * @param domain - domain to look for\n     */\n    Resolution.prototype.resolver = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                        return [4 /*yield*/, this.getNamingMethodOrThrow(domain).resolver(domain)];\n                    case 1:\n                        resolver = _a.sent();\n                        if (!resolver) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnspecifiedResolver, {\n                                domain: domain,\n                            });\n                        }\n                        return [2 /*return*/, resolver];\n                }\n            });\n        });\n    };\n    /**\n     * @param domain - domain name\n     * @returns An owner address of the domain\n     */\n    Resolution.prototype.owner = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                        method = this.getNamingMethodOrThrow(domain);\n                        return [4 /*yield*/, method.owner(domain)];\n                    case 1: return [2 /*return*/, (_a.sent()) || null];\n                }\n            });\n        });\n    };\n    /**\n     * @param domain - domain name\n     * @param recordKey - a name of a record to be resolved\n     * @returns A record value promise for a given record name\n     */\n    Resolution.prototype.record = function (domain, recordKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                method = this.getNamingMethodOrThrow(domain);\n                return [2 /*return*/, method.record(domain, recordKey)];\n            });\n        });\n    };\n    /**\n     * @param domain domain name\n     * @param keys Array of record keys to be resolved\n     * @returns A Promise with key-value mapping of domain records\n     */\n    Resolution.prototype.records = function (domain, keys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                method = this.getNamingMethodOrThrow(domain);\n                return [2 /*return*/, method.records(domain, keys)];\n            });\n        });\n    };\n    /**\n     * @param domain domain name\n     * @returns A Promise of whether or not the domain belongs to a wallet\n     */\n    Resolution.prototype.isRegistered = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                method = this.getNamingMethodOrThrow(domain);\n                return [2 /*return*/, method.isRegistered(domain)];\n            });\n        });\n    };\n    /**\n     * @param domain domain name\n     * @returns A Promise of whether or not the domain is available\n     */\n    Resolution.prototype.isAvailable = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                method = this.getNamingMethodOrThrow(domain);\n                return [2 /*return*/, method.isAvailable(domain)];\n            });\n        });\n    };\n    /**\n     * @returns Produces a namehash from supported naming service in hex format with 0x prefix.\n     * Corresponds to ERC721 token id in case of Ethereum based naming service like UNS.\n     * @param domain domain name to be converted\n     * @param options formatting options\n     * @throws [[ResolutionError]] with UnsupportedDomain error code if domain extension is unknown\n     */\n    Resolution.prototype.namehash = function (domain, options) {\n        if (options === void 0) { options = publicTypes_1.NamehashOptionsDefault; }\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        return this.formatNamehash(this.getNamingMethodOrThrow(domain).namehash(domain), options);\n    };\n    /**\n     * @returns a namehash of a subdomain with name label\n     * @param parent namehash of a parent domain\n     * @param label subdomain name\n     * @param namingService \"UNS\" or \"ZNS\"\n     * @param options formatting options\n     */\n    Resolution.prototype.childhash = function (parent, label, namingService, options) {\n        if (options === void 0) { options = publicTypes_1.NamehashOptionsDefault; }\n        var service = this.serviceMap[namingService];\n        if (!service) {\n            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedService, {\n                namingService: namingService,\n            });\n        }\n        return this.formatNamehash(service.childhash(parent, label), options);\n    };\n    Resolution.prototype.formatNamehash = function (hash, options) {\n        hash = hash.replace('0x', '');\n        if (options.format === 'dec') {\n            return new bn_js_1.default(hash, 'hex').toString(10);\n        }\n        else {\n            return options.prefix ? '0x' + hash : hash;\n        }\n    };\n    /**\n     * Checks weather the domain name matches the hash\n     * @param domain - domain name to check againt\n     * @param hash - hash obtained from the blockchain\n     */\n    Resolution.prototype.isValidHash = function (domain, hash) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        return this.namehash(domain) === hash;\n    };\n    /**\n     * Checks if the domain name is valid according to naming service rules\n     * for valid domain names.\n     * @param domain - domain name to be checked\n     */\n    Resolution.prototype.isSupportedDomain = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namingMethod, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                        namingMethod = this.getNamingMethod(domain);\n                        if (!namingMethod) return [3 /*break*/, 2];\n                        return [4 /*yield*/, namingMethod.isSupportedDomain(domain)];\n                    case 1:\n                        _a = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = false;\n                        _b.label = 3;\n                    case 3: return [2 /*return*/, _a];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the name of the service for a domain UNS | ZNS\n     * @param domain - domain name to look for\n     */\n    Resolution.prototype.serviceName = function (domain) {\n        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n        return this.getNamingMethodOrThrow(domain).serviceName();\n    };\n    /**\n     * Returns all record keys of the domain.\n     * This method is strongly unrecommended for production use due to lack of support for many ethereum service providers and low performance\n     * @param domain - domain name\n     */\n    Resolution.prototype.allRecords = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                return [2 /*return*/, this.getNamingMethodOrThrow(domain).allRecords(domain)];\n            });\n        });\n    };\n    Resolution.prototype.allNonEmptyRecords = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var records, nonEmptyRecords, _i, _a, _b, key, value;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.allRecords(domain)];\n                    case 1:\n                        records = _c.sent();\n                        nonEmptyRecords = {};\n                        for (_i = 0, _a = Object.entries(records); _i < _a.length; _i++) {\n                            _b = _a[_i], key = _b[0], value = _b[1];\n                            if (value) {\n                                nonEmptyRecords[key] = value;\n                            }\n                        }\n                        return [2 /*return*/, nonEmptyRecords];\n                }\n            });\n        });\n    };\n    Resolution.prototype.dns = function (domain, types) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dnsUtils, method, dnsRecordKeys, blockchainData;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dnsUtils = new DnsUtils_1.default();\n                        domain = prepareAndValidate_1.prepareAndValidateDomain(domain);\n                        method = this.getNamingMethodOrThrow(domain);\n                        dnsRecordKeys = this.getDnsRecordKeys(types);\n                        return [4 /*yield*/, method.records(domain, dnsRecordKeys)];\n                    case 1:\n                        blockchainData = _a.sent();\n                        return [2 /*return*/, dnsUtils.toList(blockchainData)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the tokenURI from the registry smart contract.\n     * @returns the ERC721Metadata#tokenURI contract method result\n     * @param domain - domain name\n     */\n    Resolution.prototype.tokenURI = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namehash;\n            return __generator(this, function (_a) {\n                namehash = this.namehash(domain);\n                return [2 /*return*/, this.getNamingMethodOrThrow(domain).getTokenUri(namehash)];\n            });\n        });\n    };\n    /**\n     * Retrieves the data from the endpoint provided by tokenURI from the registry smart contract.\n     * @returns the JSON response of the token URI endpoint\n     * @param domain - domain name\n     */\n    Resolution.prototype.tokenURIMetadata = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tokenUri;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.tokenURI(domain)];\n                    case 1:\n                        tokenUri = _a.sent();\n                        return [2 /*return*/, this.getMetadataFromTokenURI(tokenUri)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves address of registry contract used for domain\n     * @param domain - domain name\n     * @returns Registry contract address\n     */\n    Resolution.prototype.registryAddress = function (domain) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method;\n            return __generator(this, function (_a) {\n                method = this.getNamingMethodOrThrow(domain);\n                return [2 /*return*/, method.registryAddress(domain)];\n            });\n        });\n    };\n    /**\n     * Retrieves the domain name from tokenId by parsing registry smart contract event logs.\n     * @throws {ResolutionError} if returned domain name doesn't match the original namhash.\n     * @returns the domain name retrieved from token metadata\n     * @param hash - domain hash\n     * @param service - nameservice which is used for lookup\n     */\n    Resolution.prototype.unhash = function (hash, service) {\n        return __awaiter(this, void 0, void 0, function () {\n            var name;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        hash = namehash_1.fromDecStringToHex(hash);\n                        return [4 /*yield*/, this.serviceMap[service].getDomainFromTokenId(hash)];\n                    case 1:\n                        name = _a.sent();\n                        if (this.namehash(name) !== hash) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.ServiceProviderError, {\n                                methodName: 'unhash',\n                                domain: name,\n                                providerMessage: 'Service provider returned an invalid domain name',\n                            });\n                        }\n                        return [2 /*return*/, name];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves address of registry contract used for domain\n     * @param domains - domain name\n     * @returns Promise<Locations> - A map of domain name and Location (a set of attributes like blockchain,\n     */\n    Resolution.prototype.locations = function (domains) {\n        return __awaiter(this, void 0, void 0, function () {\n            var method, _i, domains_1, domain;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        method = this.getNamingMethodOrThrow(domains[0]);\n                        _i = 0, domains_1 = domains;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < domains_1.length)) return [3 /*break*/, 4];\n                        domain = domains_1[_i];\n                        return [4 /*yield*/, method.isSupportedDomain(domain)];\n                    case 2:\n                        if (!(_a.sent())) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.InconsistentDomainArray);\n                        }\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, method.locations(domains)];\n                }\n            });\n        });\n    };\n    Resolution.prototype.getMetadataFromTokenURI = function (tokenUri) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resp, _a, _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0: return [4 /*yield*/, Networking_1.default.fetch(tokenUri, {})];\n                    case 1:\n                        resp = _d.sent();\n                        if (resp.ok) {\n                            return [2 /*return*/, resp.json()];\n                        }\n                        _a = resolutionError_1.default.bind;\n                        _b = [void 0, resolutionError_1.ResolutionErrorCode.ServiceProviderError];\n                        _c = {};\n                        return [4 /*yield*/, resp.text()];\n                    case 2: throw new (_a.apply(resolutionError_1.default, _b.concat([(_c.providerMessage = _d.sent(),\n                            _c.method = 'UDAPI',\n                            _c.methodName = 'tokenURIMetadata',\n                            _c)])))();\n                }\n            });\n        });\n    };\n    Resolution.prototype.getDnsRecordKeys = function (types) {\n        var records = ['dns.ttl'];\n        types.forEach(function (type) {\n            records.push(\"dns.\" + type);\n            records.push(\"dns.\" + type + \".ttl\");\n        });\n        return records;\n    };\n    Resolution.prototype.getPreferableNewRecord = function (domain, newRecord, oldRecord) {\n        return __awaiter(this, void 0, void 0, function () {\n            var records;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.records(domain, [newRecord, oldRecord])];\n                    case 1:\n                        records = _a.sent();\n                        if (!records[newRecord] && !records[oldRecord]) {\n                            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.RecordNotFound, {\n                                recordName: newRecord,\n                                domain: domain,\n                            });\n                        }\n                        return [2 /*return*/, records[newRecord] || records[oldRecord]];\n                }\n            });\n        });\n    };\n    Resolution.prototype.getNamingMethod = function (domain) {\n        return this.serviceMap[utils_1.findNamingServiceName(domain)];\n    };\n    Resolution.prototype.getNamingMethodOrThrow = function (domain) {\n        var method = this.getNamingMethod(domain);\n        if (!method) {\n            throw new resolutionError_1.default(resolutionError_1.ResolutionErrorCode.UnsupportedDomain, {\n                domain: domain,\n            });\n        }\n        return method;\n    };\n    return Resolution;\n}());\nexports.Resolution = Resolution;\nexports.default = Resolution;\nfunction isApi(obj) {\n    return obj && obj.api;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}